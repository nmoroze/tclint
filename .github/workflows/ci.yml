name: CI

on:
  push:
    branches: main
  pull_request:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install tclint
        run: |
          pip install .[dev] -c dev-constraints.txt

      - name: Run tests
        run: |
          pytest

  format:
    name: Check format
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Check format
        run: |
          pip install black -c dev-constraints.txt
          black --check --preview .

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Lint
        run: |
          pip install flake8 -c dev-constraints.txt
          flake8 --statistics .

      - name: Typecheck
        run: |
          pip install . # need to install package to ensure we get type stubs for deps
          pip install mypy -c dev-constraints.txt
          mypy src

      - name: Spell check
        run: |
          pip install codespell -c dev-constraints.txt
          git ls-files | xargs codespell

  openroad:
    name: Test OR plugin
    runs-on: ubuntu-latest
    container:
      image: openroad/ubuntu-cpp20

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install tclint
        run: |
          python3 -m pip install .[dev] -c dev-constraints.txt

      - name: Get OpenROAD version
        id: openroad-version
        run: |
          # Workaround for "fatal: detected dubious ownership in repository" error
          git config --global --add safe.directory '*'

          COMMIT=$(git submodule status --cached submodules/OpenROAD | cut -d' ' -f2)
          echo "COMMIT=$COMMIT" >> $GITHUB_OUTPUT

      - name: Restore cached OpenROAD
        id: cache-openroad
        uses: actions/cache/restore@v4
        with:
          path: submodules/OpenROAD/build/bin/openroad
          key: ${{ steps.openroad-version.outputs.commit }}

      - name: Build OpenROAD
        if: steps.cache-openroad.outputs.cache-hit != 'true'
        working-directory: submodules/OpenROAD
        run: |
          ./etc/Build.sh -compiler='clang-16' -cmake='-DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_STANDARD=20'

      - name: Cache OpenROAD
        if: steps.cache-openroad.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: submodules/OpenROAD/build/src/openroad
          key: ${{ steps.cache-openroad.outputs.cache-primary-key }}

      - name: Generate command spec
        working-directory: submodules/OpenROAD
        run: |
          tclint-plugins make-spec openroad --exec build/src/openroad -o tclint-openroad-spec.json

      - name: Lint commands
        working-directory: submodules/OpenROAD
        run: |
          tclint src/**/test test --commands tclint-openroad-spec.json | tee violations.out
          ! grep "command-args" violations.out
